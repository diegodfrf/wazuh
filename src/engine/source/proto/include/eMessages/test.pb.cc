// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace com {
namespace wazuh {
namespace api {
namespace engine {
namespace test {
PROTOBUF_CONSTEXPR Session::Session(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.policy_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.filter_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.route_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/0u
  , /*decltype(_impl_.creation_date_)*/0u
  , /*decltype(_impl_.lifespan_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SessionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionDefaultTypeInternal() {}
  union {
    Session _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionDefaultTypeInternal _Session_default_instance_;
PROTOBUF_CONSTEXPR Run_AssetTrace::Run_AssetTrace(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.traces_)*/{}
  , /*decltype(_impl_.asset_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Run_AssetTraceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Run_AssetTraceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Run_AssetTraceDefaultTypeInternal() {}
  union {
    Run_AssetTrace _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Run_AssetTraceDefaultTypeInternal _Run_AssetTrace_default_instance_;
PROTOBUF_CONSTEXPR Run::Run(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.asset_traces_)*/{}
  , /*decltype(_impl_.output_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RunDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RunDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RunDefaultTypeInternal() {}
  union {
    Run _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RunDefaultTypeInternal _Run_default_instance_;
PROTOBUF_CONSTEXPR SessionGet_Request::SessionGet_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct SessionGet_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionGet_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionGet_RequestDefaultTypeInternal() {}
  union {
    SessionGet_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionGet_RequestDefaultTypeInternal _SessionGet_Request_default_instance_;
PROTOBUF_CONSTEXPR SessionGet_Response::SessionGet_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.session_)*/nullptr
  , /*decltype(_impl_.status_)*/0} {}
struct SessionGet_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionGet_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionGet_ResponseDefaultTypeInternal() {}
  union {
    SessionGet_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionGet_ResponseDefaultTypeInternal _SessionGet_Response_default_instance_;
PROTOBUF_CONSTEXPR SessionPost_Request::SessionPost_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.policy_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.lifespan_)*/0u} {}
struct SessionPost_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionPost_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionPost_RequestDefaultTypeInternal() {}
  union {
    SessionPost_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionPost_RequestDefaultTypeInternal _SessionPost_Request_default_instance_;
PROTOBUF_CONSTEXPR SessionPost_Response::SessionPost_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct SessionPost_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionPost_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionPost_ResponseDefaultTypeInternal() {}
  union {
    SessionPost_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionPost_ResponseDefaultTypeInternal _SessionPost_Response_default_instance_;
PROTOBUF_CONSTEXPR SessionsGet_Request::SessionsGet_Request(
    ::_pbi::ConstantInitialized) {}
struct SessionsGet_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionsGet_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionsGet_RequestDefaultTypeInternal() {}
  union {
    SessionsGet_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionsGet_RequestDefaultTypeInternal _SessionsGet_Request_default_instance_;
PROTOBUF_CONSTEXPR SessionsGet_Response::SessionsGet_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.list_)*/{}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0} {}
struct SessionsGet_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionsGet_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionsGet_ResponseDefaultTypeInternal() {}
  union {
    SessionsGet_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionsGet_ResponseDefaultTypeInternal _SessionsGet_Response_default_instance_;
PROTOBUF_CONSTEXPR SessionsDelete_Request::SessionsDelete_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.delete_all_)*/false} {}
struct SessionsDelete_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionsDelete_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionsDelete_RequestDefaultTypeInternal() {}
  union {
    SessionsDelete_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionsDelete_RequestDefaultTypeInternal _SessionsDelete_Request_default_instance_;
PROTOBUF_CONSTEXPR SessionsDelete_Response::SessionsDelete_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct SessionsDelete_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionsDelete_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionsDelete_ResponseDefaultTypeInternal() {}
  union {
    SessionsDelete_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionsDelete_ResponseDefaultTypeInternal _SessionsDelete_Response_default_instance_;
PROTOBUF_CONSTEXPR RunPost_Request::RunPost_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.asset_trace_)*/{}
  , /*decltype(_impl_.namespaces_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.protocol_queue_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.protocol_location_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.event_)*/nullptr
  , /*decltype(_impl_.debug_mode_)*/0} {}
struct RunPost_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RunPost_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RunPost_RequestDefaultTypeInternal() {}
  union {
    RunPost_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RunPost_RequestDefaultTypeInternal _RunPost_Request_default_instance_;
PROTOBUF_CONSTEXPR RunPost_Response::RunPost_Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.error_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.run_)*/nullptr
  , /*decltype(_impl_.status_)*/0} {}
struct RunPost_ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RunPost_ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RunPost_ResponseDefaultTypeInternal() {}
  union {
    RunPost_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RunPost_ResponseDefaultTypeInternal _RunPost_Response_default_instance_;
}  // namespace test
}  // namespace engine
}  // namespace api
}  // namespace wazuh
}  // namespace com
static ::_pb::Metadata file_level_metadata_test_2eproto[13];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_test_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_test_2eproto = nullptr;

const uint32_t TableStruct_test_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Session, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Session, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Session, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Session, _impl_.creation_date_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Session, _impl_.policy_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Session, _impl_.filter_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Session, _impl_.route_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Session, _impl_.lifespan_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Session, _impl_.description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Run_AssetTrace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Run_AssetTrace, _impl_.asset_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Run_AssetTrace, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Run_AssetTrace, _impl_.traces_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Run, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Run, _impl_.output_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::Run, _impl_.asset_traces_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionGet_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionGet_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionGet_Request, _impl_.name_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionGet_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionGet_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionGet_Response, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionGet_Response, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionGet_Response, _impl_.session_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionPost_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionPost_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionPost_Request, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionPost_Request, _impl_.policy_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionPost_Request, _impl_.lifespan_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionPost_Request, _impl_.description_),
  0,
  1,
  3,
  2,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionPost_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionPost_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionPost_Response, _impl_.error_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionsGet_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionsGet_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionsGet_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionsGet_Response, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionsGet_Response, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionsGet_Response, _impl_.list_),
  ~0u,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionsDelete_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionsDelete_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionsDelete_Request, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionsDelete_Request, _impl_.delete_all_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionsDelete_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionsDelete_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::SessionsDelete_Response, _impl_.error_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::RunPost_Request, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::RunPost_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::RunPost_Request, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::RunPost_Request, _impl_.event_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::RunPost_Request, _impl_.protocol_queue_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::RunPost_Request, _impl_.debug_mode_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::RunPost_Request, _impl_.asset_trace_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::RunPost_Request, _impl_.protocol_location_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::RunPost_Request, _impl_.namespaces_),
  0,
  3,
  1,
  4,
  ~0u,
  2,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::RunPost_Response, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::RunPost_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::RunPost_Response, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::RunPost_Response, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::com::wazuh::api::engine::test::RunPost_Response, _impl_.run_),
  ~0u,
  0,
  1,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::com::wazuh::api::engine::test::Session)},
  { 14, -1, -1, sizeof(::com::wazuh::api::engine::test::Run_AssetTrace)},
  { 23, -1, -1, sizeof(::com::wazuh::api::engine::test::Run)},
  { 31, 38, -1, sizeof(::com::wazuh::api::engine::test::SessionGet_Request)},
  { 39, 48, -1, sizeof(::com::wazuh::api::engine::test::SessionGet_Response)},
  { 51, 61, -1, sizeof(::com::wazuh::api::engine::test::SessionPost_Request)},
  { 65, 72, -1, sizeof(::com::wazuh::api::engine::test::SessionPost_Response)},
  { 73, -1, -1, sizeof(::com::wazuh::api::engine::test::SessionsGet_Request)},
  { 79, 88, -1, sizeof(::com::wazuh::api::engine::test::SessionsGet_Response)},
  { 91, 99, -1, sizeof(::com::wazuh::api::engine::test::SessionsDelete_Request)},
  { 101, 108, -1, sizeof(::com::wazuh::api::engine::test::SessionsDelete_Response)},
  { 109, 122, -1, sizeof(::com::wazuh::api::engine::test::RunPost_Request)},
  { 129, 138, -1, sizeof(::com::wazuh::api::engine::test::RunPost_Response)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::com::wazuh::api::engine::test::_Session_default_instance_._instance,
  &::com::wazuh::api::engine::test::_Run_AssetTrace_default_instance_._instance,
  &::com::wazuh::api::engine::test::_Run_default_instance_._instance,
  &::com::wazuh::api::engine::test::_SessionGet_Request_default_instance_._instance,
  &::com::wazuh::api::engine::test::_SessionGet_Response_default_instance_._instance,
  &::com::wazuh::api::engine::test::_SessionPost_Request_default_instance_._instance,
  &::com::wazuh::api::engine::test::_SessionPost_Response_default_instance_._instance,
  &::com::wazuh::api::engine::test::_SessionsGet_Request_default_instance_._instance,
  &::com::wazuh::api::engine::test::_SessionsGet_Response_default_instance_._instance,
  &::com::wazuh::api::engine::test::_SessionsDelete_Request_default_instance_._instance,
  &::com::wazuh::api::engine::test::_SessionsDelete_Response_default_instance_._instance,
  &::com::wazuh::api::engine::test::_RunPost_Request_default_instance_._instance,
  &::com::wazuh::api::engine::test::_RunPost_Response_default_instance_._instance,
};

const char descriptor_table_protodef_test_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\ntest.proto\022\031com.wazuh.api.engine.test\032"
  "\014engine.proto\032\034google/protobuf/struct.pr"
  "oto\"\220\001\n\007Session\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030\002 \001("
  "\r\022\025\n\rcreation_date\030\003 \001(\r\022\016\n\006policy\030\004 \001(\t"
  "\022\016\n\006filter\030\005 \001(\t\022\r\n\005route\030\006 \001(\t\022\020\n\010lifes"
  "pan\030\007 \001(\r\022\023\n\013description\030\010 \001(\t\"\254\001\n\003Run\022&"
  "\n\006output\030\001 \001(\0132\026.google.protobuf.Value\022\?"
  "\n\014asset_traces\030\002 \003(\0132).com.wazuh.api.eng"
  "ine.test.Run.AssetTrace\032<\n\nAssetTrace\022\r\n"
  "\005asset\030\001 \001(\t\022\017\n\007success\030\002 \001(\010\022\016\n\006traces\030"
  "\003 \003(\t\"0\n\022SessionGet_Request\022\021\n\004name\030\001 \001("
  "\tH\000\210\001\001B\007\n\005_name\"\255\001\n\023SessionGet_Response\022"
  "2\n\006status\030\001 \001(\0162\".com.wazuh.api.engine.R"
  "eturnStatus\022\022\n\005error\030\002 \001(\tH\000\210\001\001\0228\n\007sessi"
  "on\030\003 \001(\0132\".com.wazuh.api.engine.test.Ses"
  "sionH\001\210\001\001B\010\n\006_errorB\n\n\010_session\"\237\001\n\023Sess"
  "ionPost_Request\022\021\n\004name\030\001 \001(\tH\000\210\001\001\022\023\n\006po"
  "licy\030\002 \001(\tH\001\210\001\001\022\025\n\010lifespan\030\003 \001(\rH\002\210\001\001\022\030"
  "\n\013description\030\004 \001(\tH\003\210\001\001B\007\n\005_nameB\t\n\007_po"
  "licyB\013\n\t_lifespanB\016\n\014_description\"4\n\024Ses"
  "sionPost_Response\022\022\n\005error\030\001 \001(\tH\000\210\001\001B\010\n"
  "\006_error\"\025\n\023SessionsGet_Request\"v\n\024Sessio"
  "nsGet_Response\0222\n\006status\030\001 \001(\0162\".com.waz"
  "uh.api.engine.ReturnStatus\022\022\n\005error\030\002 \001("
  "\tH\000\210\001\001\022\014\n\004list\030\003 \003(\tB\010\n\006_error\"H\n\026Sessio"
  "nsDelete_Request\022\021\n\004name\030\001 \001(\tH\000\210\001\001\022\022\n\nd"
  "elete_all\030\002 \001(\010B\007\n\005_name\"7\n\027SessionsDele"
  "te_Response\022\022\n\005error\030\001 \001(\tH\000\210\001\001B\010\n\006_erro"
  "r\"\300\002\n\017RunPost_Request\022\021\n\004name\030\001 \001(\tH\000\210\001\001"
  "\022*\n\005event\030\002 \001(\0132\026.google.protobuf.ValueH"
  "\001\210\001\001\022\033\n\016protocol_queue\030\003 \001(\tH\002\210\001\001\022=\n\ndeb"
  "ug_mode\030\004 \001(\0162$.com.wazuh.api.engine.tes"
  "t.DebugModeH\003\210\001\001\022\023\n\013asset_trace\030\005 \003(\t\022\036\n"
  "\021protocol_location\030\006 \001(\tH\004\210\001\001\022\022\n\nnamespa"
  "ces\030\007 \003(\tB\007\n\005_nameB\010\n\006_eventB\021\n\017_protoco"
  "l_queueB\r\n\013_debug_modeB\024\n\022_protocol_loca"
  "tion\"\236\001\n\020RunPost_Response\0222\n\006status\030\001 \001("
  "\0162\".com.wazuh.api.engine.ReturnStatus\022\022\n"
  "\005error\030\002 \001(\tH\000\210\001\001\0220\n\003run\030\003 \001(\0132\036.com.waz"
  "uh.api.engine.test.RunH\001\210\001\001B\010\n\006_errorB\006\n"
  "\004_run*W\n\tDebugMode\022\017\n\013OUTPUT_ONLY\020\000\022\025\n\021O"
  "UTPUT_AND_TRACES\020\001\022\"\n\036OUTPUT_AND_TRACES_"
  "WITH_DETAILS\020\002b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_test_2eproto_deps[2] = {
  &::descriptor_table_engine_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
};
static ::_pbi::once_flag descriptor_table_test_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_test_2eproto = {
    false, false, 1702, descriptor_table_protodef_test_2eproto,
    "test.proto",
    &descriptor_table_test_2eproto_once, descriptor_table_test_2eproto_deps, 2, 13,
    schemas, file_default_instances, TableStruct_test_2eproto::offsets,
    file_level_metadata_test_2eproto, file_level_enum_descriptors_test_2eproto,
    file_level_service_descriptors_test_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_test_2eproto_getter() {
  return &descriptor_table_test_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_test_2eproto(&descriptor_table_test_2eproto);
namespace com {
namespace wazuh {
namespace api {
namespace engine {
namespace test {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DebugMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_test_2eproto);
  return file_level_enum_descriptors_test_2eproto[0];
}
bool DebugMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Session::_Internal {
 public:
};

Session::Session(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.test.Session)
}
Session::Session(const Session& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Session* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.filter_){}
    , decltype(_impl_.route_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.creation_date_){}
    , decltype(_impl_.lifespan_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_policy().empty()) {
    _this->_impl_.policy_.Set(from._internal_policy(), 
      _this->GetArenaForAllocation());
  }
  _impl_.filter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filter().empty()) {
    _this->_impl_.filter_.Set(from._internal_filter(), 
      _this->GetArenaForAllocation());
  }
  _impl_.route_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.route_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_route().empty()) {
    _this->_impl_.route_.Set(from._internal_route(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.lifespan_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.lifespan_));
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.test.Session)
}

inline void Session::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.filter_){}
    , decltype(_impl_.route_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.id_){0u}
    , decltype(_impl_.creation_date_){0u}
    , decltype(_impl_.lifespan_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.filter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.route_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.route_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Session::~Session() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.test.Session)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Session::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.policy_.Destroy();
  _impl_.filter_.Destroy();
  _impl_.route_.Destroy();
  _impl_.description_.Destroy();
}

void Session::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Session::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.test.Session)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.policy_.ClearToEmpty();
  _impl_.filter_.ClearToEmpty();
  _impl_.route_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.lifespan_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.lifespan_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Session::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.Session.name"));
        } else
          goto handle_unusual;
        continue;
      // uint32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 creation_date = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.creation_date_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string policy = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_policy();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.Session.policy"));
        } else
          goto handle_unusual;
        continue;
      // string filter = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_filter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.Session.filter"));
        } else
          goto handle_unusual;
        continue;
      // string route = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_route();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.Session.route"));
        } else
          goto handle_unusual;
        continue;
      // uint32 lifespan = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.lifespan_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string description = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.Session.description"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Session::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.test.Session)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.Session.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // uint32 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_id(), target);
  }

  // uint32 creation_date = 3;
  if (this->_internal_creation_date() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_creation_date(), target);
  }

  // string policy = 4;
  if (!this->_internal_policy().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy().data(), static_cast<int>(this->_internal_policy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.Session.policy");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_policy(), target);
  }

  // string filter = 5;
  if (!this->_internal_filter().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.Session.filter");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_filter(), target);
  }

  // string route = 6;
  if (!this->_internal_route().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_route().data(), static_cast<int>(this->_internal_route().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.Session.route");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_route(), target);
  }

  // uint32 lifespan = 7;
  if (this->_internal_lifespan() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_lifespan(), target);
  }

  // string description = 8;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.Session.description");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.test.Session)
  return target;
}

size_t Session::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.test.Session)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string policy = 4;
  if (!this->_internal_policy().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy());
  }

  // string filter = 5;
  if (!this->_internal_filter().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter());
  }

  // string route = 6;
  if (!this->_internal_route().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_route());
  }

  // string description = 8;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // uint32 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_id());
  }

  // uint32 creation_date = 3;
  if (this->_internal_creation_date() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_creation_date());
  }

  // uint32 lifespan = 7;
  if (this->_internal_lifespan() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_lifespan());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Session::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Session::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Session::GetClassData() const { return &_class_data_; }


void Session::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Session*>(&to_msg);
  auto& from = static_cast<const Session&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.test.Session)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_policy().empty()) {
    _this->_internal_set_policy(from._internal_policy());
  }
  if (!from._internal_filter().empty()) {
    _this->_internal_set_filter(from._internal_filter());
  }
  if (!from._internal_route().empty()) {
    _this->_internal_set_route(from._internal_route());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_creation_date() != 0) {
    _this->_internal_set_creation_date(from._internal_creation_date());
  }
  if (from._internal_lifespan() != 0) {
    _this->_internal_set_lifespan(from._internal_lifespan());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Session::CopyFrom(const Session& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.test.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Session::IsInitialized() const {
  return true;
}

void Session::InternalSwap(Session* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.policy_, lhs_arena,
      &other->_impl_.policy_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.filter_, lhs_arena,
      &other->_impl_.filter_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.route_, lhs_arena,
      &other->_impl_.route_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Session, _impl_.lifespan_)
      + sizeof(Session::_impl_.lifespan_)
      - PROTOBUF_FIELD_OFFSET(Session, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Session::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[0]);
}

// ===================================================================

class Run_AssetTrace::_Internal {
 public:
};

Run_AssetTrace::Run_AssetTrace(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.test.Run.AssetTrace)
}
Run_AssetTrace::Run_AssetTrace(const Run_AssetTrace& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Run_AssetTrace* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.traces_){from._impl_.traces_}
    , decltype(_impl_.asset_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.asset_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.asset_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_asset().empty()) {
    _this->_impl_.asset_.Set(from._internal_asset(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.test.Run.AssetTrace)
}

inline void Run_AssetTrace::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.traces_){arena}
    , decltype(_impl_.asset_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.asset_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.asset_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Run_AssetTrace::~Run_AssetTrace() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.test.Run.AssetTrace)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Run_AssetTrace::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.traces_.~RepeatedPtrField();
  _impl_.asset_.Destroy();
}

void Run_AssetTrace::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Run_AssetTrace::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.test.Run.AssetTrace)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.traces_.Clear();
  _impl_.asset_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Run_AssetTrace::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string asset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_asset();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.Run.AssetTrace.asset"));
        } else
          goto handle_unusual;
        continue;
      // bool success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string traces = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_traces();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.Run.AssetTrace.traces"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Run_AssetTrace::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.test.Run.AssetTrace)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string asset = 1;
  if (!this->_internal_asset().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_asset().data(), static_cast<int>(this->_internal_asset().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.Run.AssetTrace.asset");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_asset(), target);
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_success(), target);
  }

  // repeated string traces = 3;
  for (int i = 0, n = this->_internal_traces_size(); i < n; i++) {
    const auto& s = this->_internal_traces(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.Run.AssetTrace.traces");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.test.Run.AssetTrace)
  return target;
}

size_t Run_AssetTrace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.test.Run.AssetTrace)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string traces = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.traces_.size());
  for (int i = 0, n = _impl_.traces_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.traces_.Get(i));
  }

  // string asset = 1;
  if (!this->_internal_asset().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_asset());
  }

  // bool success = 2;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Run_AssetTrace::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Run_AssetTrace::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Run_AssetTrace::GetClassData() const { return &_class_data_; }


void Run_AssetTrace::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Run_AssetTrace*>(&to_msg);
  auto& from = static_cast<const Run_AssetTrace&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.test.Run.AssetTrace)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.traces_.MergeFrom(from._impl_.traces_);
  if (!from._internal_asset().empty()) {
    _this->_internal_set_asset(from._internal_asset());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Run_AssetTrace::CopyFrom(const Run_AssetTrace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.test.Run.AssetTrace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Run_AssetTrace::IsInitialized() const {
  return true;
}

void Run_AssetTrace::InternalSwap(Run_AssetTrace* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.traces_.InternalSwap(&other->_impl_.traces_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.asset_, lhs_arena,
      &other->_impl_.asset_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Run_AssetTrace::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[1]);
}

// ===================================================================

class Run::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Value& output(const Run* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Value&
Run::_Internal::output(const Run* msg) {
  return *msg->_impl_.output_;
}
void Run::clear_output() {
  if (GetArenaForAllocation() == nullptr && _impl_.output_ != nullptr) {
    delete _impl_.output_;
  }
  _impl_.output_ = nullptr;
}
Run::Run(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.test.Run)
}
Run::Run(const Run& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Run* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.asset_traces_){from._impl_.asset_traces_}
    , decltype(_impl_.output_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_output()) {
    _this->_impl_.output_ = new ::PROTOBUF_NAMESPACE_ID::Value(*from._impl_.output_);
  }
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.test.Run)
}

inline void Run::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.asset_traces_){arena}
    , decltype(_impl_.output_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Run::~Run() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.test.Run)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Run::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.asset_traces_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.output_;
}

void Run::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Run::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.test.Run)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.asset_traces_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.output_ != nullptr) {
    delete _impl_.output_;
  }
  _impl_.output_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Run::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Value output = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_output(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .com.wazuh.api.engine.test.Run.AssetTrace asset_traces = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_asset_traces(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Run::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.test.Run)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Value output = 1;
  if (this->_internal_has_output()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::output(this),
        _Internal::output(this).GetCachedSize(), target, stream);
  }

  // repeated .com.wazuh.api.engine.test.Run.AssetTrace asset_traces = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_asset_traces_size()); i < n; i++) {
    const auto& repfield = this->_internal_asset_traces(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.test.Run)
  return target;
}

size_t Run::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.test.Run)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.wazuh.api.engine.test.Run.AssetTrace asset_traces = 2;
  total_size += 1UL * this->_internal_asset_traces_size();
  for (const auto& msg : this->_impl_.asset_traces_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.protobuf.Value output = 1;
  if (this->_internal_has_output()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.output_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Run::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Run::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Run::GetClassData() const { return &_class_data_; }


void Run::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Run*>(&to_msg);
  auto& from = static_cast<const Run&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.test.Run)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.asset_traces_.MergeFrom(from._impl_.asset_traces_);
  if (from._internal_has_output()) {
    _this->_internal_mutable_output()->::PROTOBUF_NAMESPACE_ID::Value::MergeFrom(
        from._internal_output());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Run::CopyFrom(const Run& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.test.Run)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Run::IsInitialized() const {
  return true;
}

void Run::InternalSwap(Run* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.asset_traces_.InternalSwap(&other->_impl_.asset_traces_);
  swap(_impl_.output_, other->_impl_.output_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Run::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[2]);
}

// ===================================================================

class SessionGet_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<SessionGet_Request>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SessionGet_Request::SessionGet_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.test.SessionGet_Request)
}
SessionGet_Request::SessionGet_Request(const SessionGet_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SessionGet_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.test.SessionGet_Request)
}

inline void SessionGet_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SessionGet_Request::~SessionGet_Request() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.test.SessionGet_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SessionGet_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void SessionGet_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SessionGet_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.test.SessionGet_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SessionGet_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.SessionGet_Request.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SessionGet_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.test.SessionGet_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string name = 1;
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.SessionGet_Request.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.test.SessionGet_Request)
  return target;
}

size_t SessionGet_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.test.SessionGet_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string name = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SessionGet_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SessionGet_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SessionGet_Request::GetClassData() const { return &_class_data_; }


void SessionGet_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SessionGet_Request*>(&to_msg);
  auto& from = static_cast<const SessionGet_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.test.SessionGet_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_name()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SessionGet_Request::CopyFrom(const SessionGet_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.test.SessionGet_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionGet_Request::IsInitialized() const {
  return true;
}

void SessionGet_Request::InternalSwap(SessionGet_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SessionGet_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[3]);
}

// ===================================================================

class SessionGet_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<SessionGet_Response>()._impl_._has_bits_);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::wazuh::api::engine::test::Session& session(const SessionGet_Response* msg);
  static void set_has_session(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::com::wazuh::api::engine::test::Session&
SessionGet_Response::_Internal::session(const SessionGet_Response* msg) {
  return *msg->_impl_.session_;
}
SessionGet_Response::SessionGet_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.test.SessionGet_Response)
}
SessionGet_Response::SessionGet_Response(const SessionGet_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SessionGet_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.session_){nullptr}
    , decltype(_impl_.status_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_session()) {
    _this->_impl_.session_ = new ::com::wazuh::api::engine::test::Session(*from._impl_.session_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.test.SessionGet_Response)
}

inline void SessionGet_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.session_){nullptr}
    , decltype(_impl_.status_){0}
  };
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SessionGet_Response::~SessionGet_Response() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.test.SessionGet_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SessionGet_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_.Destroy();
  if (this != internal_default_instance()) delete _impl_.session_;
}

void SessionGet_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SessionGet_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.test.SessionGet_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.session_ != nullptr);
      _impl_.session_->Clear();
    }
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SessionGet_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.wazuh.api.engine.ReturnStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::wazuh::api::engine::ReturnStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.SessionGet_Response.error"));
        } else
          goto handle_unusual;
        continue;
      // optional .com.wazuh.api.engine.test.Session session = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_session(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SessionGet_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.test.SessionGet_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // optional string error = 2;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.SessionGet_Response.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  // optional .com.wazuh.api.engine.test.Session session = 3;
  if (_internal_has_session()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::session(this),
        _Internal::session(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.test.SessionGet_Response)
  return target;
}

size_t SessionGet_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.test.SessionGet_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string error = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
    }

    // optional .com.wazuh.api.engine.test.Session session = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.session_);
    }

  }
  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SessionGet_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SessionGet_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SessionGet_Response::GetClassData() const { return &_class_data_; }


void SessionGet_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SessionGet_Response*>(&to_msg);
  auto& from = static_cast<const SessionGet_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.test.SessionGet_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_error(from._internal_error());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_session()->::com::wazuh::api::engine::test::Session::MergeFrom(
          from._internal_session());
    }
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SessionGet_Response::CopyFrom(const SessionGet_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.test.SessionGet_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionGet_Response::IsInitialized() const {
  return true;
}

void SessionGet_Response::InternalSwap(SessionGet_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SessionGet_Response, _impl_.status_)
      + sizeof(SessionGet_Response::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(SessionGet_Response, _impl_.session_)>(
          reinterpret_cast<char*>(&_impl_.session_),
          reinterpret_cast<char*>(&other->_impl_.session_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SessionGet_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[4]);
}

// ===================================================================

class SessionPost_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<SessionPost_Request>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_lifespan(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

SessionPost_Request::SessionPost_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.test.SessionPost_Request)
}
SessionPost_Request::SessionPost_Request(const SessionPost_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SessionPost_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.lifespan_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_policy()) {
    _this->_impl_.policy_.Set(from._internal_policy(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_description()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.lifespan_ = from._impl_.lifespan_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.test.SessionPost_Request)
}

inline void SessionPost_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.policy_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.lifespan_){0u}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.policy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.policy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SessionPost_Request::~SessionPost_Request() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.test.SessionPost_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SessionPost_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.policy_.Destroy();
  _impl_.description_.Destroy();
}

void SessionPost_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SessionPost_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.test.SessionPost_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.policy_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.lifespan_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SessionPost_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.SessionPost_Request.name"));
        } else
          goto handle_unusual;
        continue;
      // optional string policy = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_policy();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.SessionPost_Request.policy"));
        } else
          goto handle_unusual;
        continue;
      // optional uint32 lifespan = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_lifespan(&has_bits);
          _impl_.lifespan_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.SessionPost_Request.description"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SessionPost_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.test.SessionPost_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string name = 1;
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.SessionPost_Request.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional string policy = 2;
  if (_internal_has_policy()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy().data(), static_cast<int>(this->_internal_policy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.SessionPost_Request.policy");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_policy(), target);
  }

  // optional uint32 lifespan = 3;
  if (_internal_has_lifespan()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_lifespan(), target);
  }

  // optional string description = 4;
  if (_internal_has_description()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.SessionPost_Request.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.test.SessionPost_Request)
  return target;
}

size_t SessionPost_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.test.SessionPost_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string policy = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_policy());
    }

    // optional string description = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // optional uint32 lifespan = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_lifespan());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SessionPost_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SessionPost_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SessionPost_Request::GetClassData() const { return &_class_data_; }


void SessionPost_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SessionPost_Request*>(&to_msg);
  auto& from = static_cast<const SessionPost_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.test.SessionPost_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_policy(from._internal_policy());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.lifespan_ = from._impl_.lifespan_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SessionPost_Request::CopyFrom(const SessionPost_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.test.SessionPost_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionPost_Request::IsInitialized() const {
  return true;
}

void SessionPost_Request::InternalSwap(SessionPost_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.policy_, lhs_arena,
      &other->_impl_.policy_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  swap(_impl_.lifespan_, other->_impl_.lifespan_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SessionPost_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[5]);
}

// ===================================================================

class SessionPost_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<SessionPost_Response>()._impl_._has_bits_);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SessionPost_Response::SessionPost_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.test.SessionPost_Response)
}
SessionPost_Response::SessionPost_Response(const SessionPost_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SessionPost_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.test.SessionPost_Response)
}

inline void SessionPost_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
  };
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SessionPost_Response::~SessionPost_Response() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.test.SessionPost_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SessionPost_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_.Destroy();
}

void SessionPost_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SessionPost_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.test.SessionPost_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.error_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SessionPost_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.SessionPost_Response.error"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SessionPost_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.test.SessionPost_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string error = 1;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.SessionPost_Response.error");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.test.SessionPost_Response)
  return target;
}

size_t SessionPost_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.test.SessionPost_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string error = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SessionPost_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SessionPost_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SessionPost_Response::GetClassData() const { return &_class_data_; }


void SessionPost_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SessionPost_Response*>(&to_msg);
  auto& from = static_cast<const SessionPost_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.test.SessionPost_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SessionPost_Response::CopyFrom(const SessionPost_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.test.SessionPost_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionPost_Response::IsInitialized() const {
  return true;
}

void SessionPost_Response::InternalSwap(SessionPost_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SessionPost_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[6]);
}

// ===================================================================

class SessionsGet_Request::_Internal {
 public:
};

SessionsGet_Request::SessionsGet_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.test.SessionsGet_Request)
}
SessionsGet_Request::SessionsGet_Request(const SessionsGet_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  SessionsGet_Request* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.test.SessionsGet_Request)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SessionsGet_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SessionsGet_Request::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SessionsGet_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[7]);
}

// ===================================================================

class SessionsGet_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<SessionsGet_Response>()._impl_._has_bits_);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SessionsGet_Response::SessionsGet_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.test.SessionsGet_Response)
}
SessionsGet_Response::SessionsGet_Response(const SessionsGet_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SessionsGet_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_){from._impl_.list_}
    , decltype(_impl_.error_){}
    , decltype(_impl_.status_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.test.SessionsGet_Response)
}

inline void SessionsGet_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.list_){arena}
    , decltype(_impl_.error_){}
    , decltype(_impl_.status_){0}
  };
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SessionsGet_Response::~SessionsGet_Response() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.test.SessionsGet_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SessionsGet_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.list_.~RepeatedPtrField();
  _impl_.error_.Destroy();
}

void SessionsGet_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SessionsGet_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.test.SessionsGet_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.list_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.error_.ClearNonDefaultToEmpty();
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SessionsGet_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.wazuh.api.engine.ReturnStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::wazuh::api::engine::ReturnStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.SessionsGet_Response.error"));
        } else
          goto handle_unusual;
        continue;
      // repeated string list = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_list();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.SessionsGet_Response.list"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SessionsGet_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.test.SessionsGet_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // optional string error = 2;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.SessionsGet_Response.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  // repeated string list = 3;
  for (int i = 0, n = this->_internal_list_size(); i < n; i++) {
    const auto& s = this->_internal_list(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.SessionsGet_Response.list");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.test.SessionsGet_Response)
  return target;
}

size_t SessionsGet_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.test.SessionsGet_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string list = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.list_.size());
  for (int i = 0, n = _impl_.list_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.list_.Get(i));
  }

  // optional string error = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SessionsGet_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SessionsGet_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SessionsGet_Response::GetClassData() const { return &_class_data_; }


void SessionsGet_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SessionsGet_Response*>(&to_msg);
  auto& from = static_cast<const SessionsGet_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.test.SessionsGet_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.list_.MergeFrom(from._impl_.list_);
  if (from._internal_has_error()) {
    _this->_internal_set_error(from._internal_error());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SessionsGet_Response::CopyFrom(const SessionsGet_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.test.SessionsGet_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionsGet_Response::IsInitialized() const {
  return true;
}

void SessionsGet_Response::InternalSwap(SessionsGet_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.list_.InternalSwap(&other->_impl_.list_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SessionsGet_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[8]);
}

// ===================================================================

class SessionsDelete_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<SessionsDelete_Request>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SessionsDelete_Request::SessionsDelete_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.test.SessionsDelete_Request)
}
SessionsDelete_Request::SessionsDelete_Request(const SessionsDelete_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SessionsDelete_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.delete_all_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.delete_all_ = from._impl_.delete_all_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.test.SessionsDelete_Request)
}

inline void SessionsDelete_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.delete_all_){false}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SessionsDelete_Request::~SessionsDelete_Request() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.test.SessionsDelete_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SessionsDelete_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void SessionsDelete_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SessionsDelete_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.test.SessionsDelete_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.delete_all_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SessionsDelete_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.SessionsDelete_Request.name"));
        } else
          goto handle_unusual;
        continue;
      // bool delete_all = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.delete_all_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SessionsDelete_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.test.SessionsDelete_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string name = 1;
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.SessionsDelete_Request.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool delete_all = 2;
  if (this->_internal_delete_all() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_delete_all(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.test.SessionsDelete_Request)
  return target;
}

size_t SessionsDelete_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.test.SessionsDelete_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string name = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool delete_all = 2;
  if (this->_internal_delete_all() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SessionsDelete_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SessionsDelete_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SessionsDelete_Request::GetClassData() const { return &_class_data_; }


void SessionsDelete_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SessionsDelete_Request*>(&to_msg);
  auto& from = static_cast<const SessionsDelete_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.test.SessionsDelete_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_name()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_delete_all() != 0) {
    _this->_internal_set_delete_all(from._internal_delete_all());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SessionsDelete_Request::CopyFrom(const SessionsDelete_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.test.SessionsDelete_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionsDelete_Request::IsInitialized() const {
  return true;
}

void SessionsDelete_Request::InternalSwap(SessionsDelete_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.delete_all_, other->_impl_.delete_all_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SessionsDelete_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[9]);
}

// ===================================================================

class SessionsDelete_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<SessionsDelete_Response>()._impl_._has_bits_);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SessionsDelete_Response::SessionsDelete_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.test.SessionsDelete_Response)
}
SessionsDelete_Response::SessionsDelete_Response(const SessionsDelete_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SessionsDelete_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.test.SessionsDelete_Response)
}

inline void SessionsDelete_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
  };
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SessionsDelete_Response::~SessionsDelete_Response() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.test.SessionsDelete_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SessionsDelete_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_.Destroy();
}

void SessionsDelete_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SessionsDelete_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.test.SessionsDelete_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.error_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SessionsDelete_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.SessionsDelete_Response.error"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SessionsDelete_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.test.SessionsDelete_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string error = 1;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.SessionsDelete_Response.error");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.test.SessionsDelete_Response)
  return target;
}

size_t SessionsDelete_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.test.SessionsDelete_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string error = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SessionsDelete_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SessionsDelete_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SessionsDelete_Response::GetClassData() const { return &_class_data_; }


void SessionsDelete_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SessionsDelete_Response*>(&to_msg);
  auto& from = static_cast<const SessionsDelete_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.test.SessionsDelete_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_error()) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SessionsDelete_Response::CopyFrom(const SessionsDelete_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.test.SessionsDelete_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionsDelete_Response::IsInitialized() const {
  return true;
}

void SessionsDelete_Response::InternalSwap(SessionsDelete_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SessionsDelete_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[10]);
}

// ===================================================================

class RunPost_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<RunPost_Request>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Value& event(const RunPost_Request* msg);
  static void set_has_event(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_protocol_queue(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_debug_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_protocol_location(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Value&
RunPost_Request::_Internal::event(const RunPost_Request* msg) {
  return *msg->_impl_.event_;
}
void RunPost_Request::clear_event() {
  if (_impl_.event_ != nullptr) _impl_.event_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
RunPost_Request::RunPost_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.test.RunPost_Request)
}
RunPost_Request::RunPost_Request(const RunPost_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RunPost_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.asset_trace_){from._impl_.asset_trace_}
    , decltype(_impl_.namespaces_){from._impl_.namespaces_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.protocol_queue_){}
    , decltype(_impl_.protocol_location_){}
    , decltype(_impl_.event_){nullptr}
    , decltype(_impl_.debug_mode_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.protocol_queue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.protocol_queue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_protocol_queue()) {
    _this->_impl_.protocol_queue_.Set(from._internal_protocol_queue(), 
      _this->GetArenaForAllocation());
  }
  _impl_.protocol_location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.protocol_location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_protocol_location()) {
    _this->_impl_.protocol_location_.Set(from._internal_protocol_location(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_event()) {
    _this->_impl_.event_ = new ::PROTOBUF_NAMESPACE_ID::Value(*from._impl_.event_);
  }
  _this->_impl_.debug_mode_ = from._impl_.debug_mode_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.test.RunPost_Request)
}

inline void RunPost_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.asset_trace_){arena}
    , decltype(_impl_.namespaces_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.protocol_queue_){}
    , decltype(_impl_.protocol_location_){}
    , decltype(_impl_.event_){nullptr}
    , decltype(_impl_.debug_mode_){0}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.protocol_queue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.protocol_queue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.protocol_location_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.protocol_location_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RunPost_Request::~RunPost_Request() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.test.RunPost_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RunPost_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.asset_trace_.~RepeatedPtrField();
  _impl_.namespaces_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.protocol_queue_.Destroy();
  _impl_.protocol_location_.Destroy();
  if (this != internal_default_instance()) delete _impl_.event_;
}

void RunPost_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RunPost_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.test.RunPost_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.asset_trace_.Clear();
  _impl_.namespaces_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.protocol_queue_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.protocol_location_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.event_ != nullptr);
      _impl_.event_->Clear();
    }
  }
  _impl_.debug_mode_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RunPost_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.RunPost_Request.name"));
        } else
          goto handle_unusual;
        continue;
      // optional .google.protobuf.Value event = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_event(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string protocol_queue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_protocol_queue();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.RunPost_Request.protocol_queue"));
        } else
          goto handle_unusual;
        continue;
      // optional .com.wazuh.api.engine.test.DebugMode debug_mode = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_debug_mode(static_cast<::com::wazuh::api::engine::test::DebugMode>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated string asset_trace = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_asset_trace();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.RunPost_Request.asset_trace"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional string protocol_location = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_protocol_location();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.RunPost_Request.protocol_location"));
        } else
          goto handle_unusual;
        continue;
      // repeated string namespaces = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_namespaces();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.RunPost_Request.namespaces"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RunPost_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.test.RunPost_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string name = 1;
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.RunPost_Request.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional .google.protobuf.Value event = 2;
  if (_internal_has_event()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::event(this),
        _Internal::event(this).GetCachedSize(), target, stream);
  }

  // optional string protocol_queue = 3;
  if (_internal_has_protocol_queue()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_protocol_queue().data(), static_cast<int>(this->_internal_protocol_queue().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.RunPost_Request.protocol_queue");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_protocol_queue(), target);
  }

  // optional .com.wazuh.api.engine.test.DebugMode debug_mode = 4;
  if (_internal_has_debug_mode()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_debug_mode(), target);
  }

  // repeated string asset_trace = 5;
  for (int i = 0, n = this->_internal_asset_trace_size(); i < n; i++) {
    const auto& s = this->_internal_asset_trace(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.RunPost_Request.asset_trace");
    target = stream->WriteString(5, s, target);
  }

  // optional string protocol_location = 6;
  if (_internal_has_protocol_location()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_protocol_location().data(), static_cast<int>(this->_internal_protocol_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.RunPost_Request.protocol_location");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_protocol_location(), target);
  }

  // repeated string namespaces = 7;
  for (int i = 0, n = this->_internal_namespaces_size(); i < n; i++) {
    const auto& s = this->_internal_namespaces(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.RunPost_Request.namespaces");
    target = stream->WriteString(7, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.test.RunPost_Request)
  return target;
}

size_t RunPost_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.test.RunPost_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string asset_trace = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.asset_trace_.size());
  for (int i = 0, n = _impl_.asset_trace_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.asset_trace_.Get(i));
  }

  // repeated string namespaces = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.namespaces_.size());
  for (int i = 0, n = _impl_.namespaces_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.namespaces_.Get(i));
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string protocol_queue = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_protocol_queue());
    }

    // optional string protocol_location = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_protocol_location());
    }

    // optional .google.protobuf.Value event = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.event_);
    }

    // optional .com.wazuh.api.engine.test.DebugMode debug_mode = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_debug_mode());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RunPost_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RunPost_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RunPost_Request::GetClassData() const { return &_class_data_; }


void RunPost_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RunPost_Request*>(&to_msg);
  auto& from = static_cast<const RunPost_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.test.RunPost_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.asset_trace_.MergeFrom(from._impl_.asset_trace_);
  _this->_impl_.namespaces_.MergeFrom(from._impl_.namespaces_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_protocol_queue(from._internal_protocol_queue());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_protocol_location(from._internal_protocol_location());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_event()->::PROTOBUF_NAMESPACE_ID::Value::MergeFrom(
          from._internal_event());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.debug_mode_ = from._impl_.debug_mode_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RunPost_Request::CopyFrom(const RunPost_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.test.RunPost_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunPost_Request::IsInitialized() const {
  return true;
}

void RunPost_Request::InternalSwap(RunPost_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.asset_trace_.InternalSwap(&other->_impl_.asset_trace_);
  _impl_.namespaces_.InternalSwap(&other->_impl_.namespaces_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.protocol_queue_, lhs_arena,
      &other->_impl_.protocol_queue_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.protocol_location_, lhs_arena,
      &other->_impl_.protocol_location_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RunPost_Request, _impl_.debug_mode_)
      + sizeof(RunPost_Request::_impl_.debug_mode_)
      - PROTOBUF_FIELD_OFFSET(RunPost_Request, _impl_.event_)>(
          reinterpret_cast<char*>(&_impl_.event_),
          reinterpret_cast<char*>(&other->_impl_.event_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RunPost_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[11]);
}

// ===================================================================

class RunPost_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<RunPost_Response>()._impl_._has_bits_);
  static void set_has_error(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::wazuh::api::engine::test::Run& run(const RunPost_Response* msg);
  static void set_has_run(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::com::wazuh::api::engine::test::Run&
RunPost_Response::_Internal::run(const RunPost_Response* msg) {
  return *msg->_impl_.run_;
}
RunPost_Response::RunPost_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:com.wazuh.api.engine.test.RunPost_Response)
}
RunPost_Response::RunPost_Response(const RunPost_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RunPost_Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.run_){nullptr}
    , decltype(_impl_.status_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_error()) {
    _this->_impl_.error_.Set(from._internal_error(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_run()) {
    _this->_impl_.run_ = new ::com::wazuh::api::engine::test::Run(*from._impl_.run_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:com.wazuh.api.engine.test.RunPost_Response)
}

inline void RunPost_Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.error_){}
    , decltype(_impl_.run_){nullptr}
    , decltype(_impl_.status_){0}
  };
  _impl_.error_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RunPost_Response::~RunPost_Response() {
  // @@protoc_insertion_point(destructor:com.wazuh.api.engine.test.RunPost_Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RunPost_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_.Destroy();
  if (this != internal_default_instance()) delete _impl_.run_;
}

void RunPost_Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RunPost_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:com.wazuh.api.engine.test.RunPost_Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.error_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.run_ != nullptr);
      _impl_.run_->Clear();
    }
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RunPost_Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.wazuh.api.engine.ReturnStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::com::wazuh::api::engine::ReturnStatus>(val));
        } else
          goto handle_unusual;
        continue;
      // optional string error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.wazuh.api.engine.test.RunPost_Response.error"));
        } else
          goto handle_unusual;
        continue;
      // optional .com.wazuh.api.engine.test.Run run = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_run(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RunPost_Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.wazuh.api.engine.test.RunPost_Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // optional string error = 2;
  if (_internal_has_error()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com.wazuh.api.engine.test.RunPost_Response.error");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error(), target);
  }

  // optional .com.wazuh.api.engine.test.Run run = 3;
  if (_internal_has_run()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::run(this),
        _Internal::run(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.wazuh.api.engine.test.RunPost_Response)
  return target;
}

size_t RunPost_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.wazuh.api.engine.test.RunPost_Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string error = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error());
    }

    // optional .com.wazuh.api.engine.test.Run run = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.run_);
    }

  }
  // .com.wazuh.api.engine.ReturnStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RunPost_Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RunPost_Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RunPost_Response::GetClassData() const { return &_class_data_; }


void RunPost_Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RunPost_Response*>(&to_msg);
  auto& from = static_cast<const RunPost_Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.wazuh.api.engine.test.RunPost_Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_error(from._internal_error());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_run()->::com::wazuh::api::engine::test::Run::MergeFrom(
          from._internal_run());
    }
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RunPost_Response::CopyFrom(const RunPost_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.wazuh.api.engine.test.RunPost_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunPost_Response::IsInitialized() const {
  return true;
}

void RunPost_Response::InternalSwap(RunPost_Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_, lhs_arena,
      &other->_impl_.error_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RunPost_Response, _impl_.status_)
      + sizeof(RunPost_Response::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(RunPost_Response, _impl_.run_)>(
          reinterpret_cast<char*>(&_impl_.run_),
          reinterpret_cast<char*>(&other->_impl_.run_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RunPost_Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_2eproto_getter, &descriptor_table_test_2eproto_once,
      file_level_metadata_test_2eproto[12]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace test
}  // namespace engine
}  // namespace api
}  // namespace wazuh
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::test::Session*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::test::Session >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::test::Session >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::test::Run_AssetTrace*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::test::Run_AssetTrace >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::test::Run_AssetTrace >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::test::Run*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::test::Run >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::test::Run >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::test::SessionGet_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::test::SessionGet_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::test::SessionGet_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::test::SessionGet_Response*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::test::SessionGet_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::test::SessionGet_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::test::SessionPost_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::test::SessionPost_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::test::SessionPost_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::test::SessionPost_Response*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::test::SessionPost_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::test::SessionPost_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::test::SessionsGet_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::test::SessionsGet_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::test::SessionsGet_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::test::SessionsGet_Response*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::test::SessionsGet_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::test::SessionsGet_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::test::SessionsDelete_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::test::SessionsDelete_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::test::SessionsDelete_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::test::SessionsDelete_Response*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::test::SessionsDelete_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::test::SessionsDelete_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::test::RunPost_Request*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::test::RunPost_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::test::RunPost_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::com::wazuh::api::engine::test::RunPost_Response*
Arena::CreateMaybeMessage< ::com::wazuh::api::engine::test::RunPost_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::wazuh::api::engine::test::RunPost_Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
